
//                   - ShaderFarc - Ver( 3.1 )
//============================================================================//
//      Project DIVA Future Tone  -  " Shader for MikuMikuDance"
//             Credits: Infu_D    -   Korenkonder(DivaGL);
//============================================================================//

  //====================  Matrices  =====================//
float4x4 g_transforms 		 : WORLDVIEWPROJECTION;
float4x4 g_worlds    		 : WORLD;
float4x4 g_worlds_invtrans 	 : WORLDINVERSETRANSPOSE;
float4x4 g_worldview       	 : WORLDVIEW;
float4x4 g_worldview_inverse : WORLDVIEWINVERSE;
float4x4 g_joint 			 : JOINT;
float4x4 g_joint_inverse 	 : JOINTINVERSE;
float4x4 g_projection_view   : PROJECTIONVIEW;

float4 	LightDirection    : DIRECTION < string Object = "Light"; >;
float4	CameraPosition    : POSITION  < string Object = "Camera"; >;

  //=== Material ===//
float4   MaterialDiffuse   : DIFFUSE  < string Object = "Geometry"; >;
float4   MaterialAmbient   : AMBIENT  < string Object = "Geometry"; >;
float4   MaterialEmmisive  : EMISSIVE < string Object = "Geometry"; >;
float4   MaterialSpecular  : SPECULAR < string Object = "Geometry"; >;
float    SpecularPower     : SPECULARPOWER < string Object = "Geometry"; >;
float4   MaterialToon      : TOONCOLOR;
float4 	 EdgeColor		   : EDGECOLOR;
  //=== Light Data ===//
float4   LightDiffuse      : DIFFUSE   < string Object = "Light"; >;
float4   LightAmbient      : AMBIENT   < string Object = "Light"; >;
float4   LightSpecular     : SPECULAR  < string Object = "Light"; >;

float  Time: TIME;
float2 ViewportSize : VIEWPORTPIXELSIZE;
static const float2 ViewportOffset = float2(0.5,0.5)/ViewportSize;

bool parthf;   // Perspective flag
bool transp;   // Semi-transparent flag
bool spadd;    // Sphere map additive composition flag
#define SKII1  1500
#define SKII2  8000
#define Toon   3

  //=== MMD Samplers ===//
sampler MMDSamp0 : register(s0);
sampler MMDSamp1 : register(s1);
sampler MMDSamp2 : register(s2);

  //=================  ShaderFarc Sync  =================//
#define MS(a,b) a##b 
#define SF_X "ShaderFarc.x"
bool SF_Valid : CONTROLOBJECT < string name = SF_X; >;

float4x4 Chara_Pos : CONTROLOBJECT < string name = "#ShaderFarc_Controller.pmx"; string item = "Chara_Position" ; >;
float4x4 Stage_Pos : CONTROLOBJECT < string name = "#ShaderFarc_Controller.pmx"; string item = "Stage_Position" ; >;
static float3 IBL_Dir   = Chara_Pos._41_42_43;
static float3 Stage_Dir = Stage_Pos._41_42_43;

float4x4 Chr_Diffu : CONTROLOBJECT < string name = Controller; string item = "Chara_Diffuse"  ; >;
float4x4 Chr_Specu : CONTROLOBJECT < string name = Controller; string item = "Chara_Specular" ; >;
float4x4 Chr_Ambie : CONTROLOBJECT < string name = Controller; string item = "Chara_Ambient"  ; >;
float4x4 Stg_Diffu : CONTROLOBJECT < string name = Controller; string item = "Stage_Diffuse"  ; >;
float4x4 Stg_Specu : CONTROLOBJECT < string name = Controller; string item = "Stage_Specular" ; >;

static float4 chara_diffuse	 = Chr_Diffu._41_42_43_31 - float4(7, 15, -0.5, 0);
static float4 chara_specular = Chr_Specu._41_42_43_31 - float4(7, 11, -0.5, 0);
static float4 chara_ambient  = Chr_Ambie._41_42_43_31 - float4(7, 13, -0.5, 0);
static float4 stage_diffuse  = Stg_Diffu._41_42_43_31 - float4(-7, 15, -0.5, 0);
static float4 stage_specular = Stg_Specu._41_42_43_31 - float4(-7, 11, -0.5, 0);

float Override 	  : CONTROLOBJECT < string name = Controller; string item = "Override";>;
float Specular_A  : CONTROLOBJECT < string name = Controller; string item = "Specular +";>;
float Specular_B  : CONTROLOBJECT < string name = Controller; string item = "Specular -";>;
float Shininess_A : CONTROLOBJECT < string name = Controller; string item = "Shininess +";>;
float Shininess_B : CONTROLOBJECT < string name = Controller; string item = "Shininess -";>;

#if SHADER_TYPE == 100 || SHADER_TYPE == 101 || SHADER_TYPE == 102 || SHADER_TYPE == 103 || SHADER_TYPE == 104
float4x4 TX0 : CONTROLOBJECT < string name="(self)"; string item = MS(obj_ID, "_tx0_trf") ; >;
float4x4 TX1 : CONTROLOBJECT < string name="(self)"; string item = MS(obj_ID, "_tx1_trf") ; >;
float4x4 RP0 : CONTROLOBJECT < string name="(self)"; string item = MS(obj_ID, "_tx0_rpt") ; >;
float4x4 RP1 : CONTROLOBJECT < string name="(self)"; string item = MS(obj_ID, "_tx1_rpt") ; >;
float4x4 VIS : CONTROLOBJECT < string name="(self)"; string item = MS(obj_ID, "_vis") ; >;
static float3 TX0_TRF = TX0._41_42_43;
static float3 TX1_TRF = TX1._41_42_43;
static float4 TX0_RPT = RP0._41_42_43_44;
static float4 TX1_RPT = RP1._41_42_43_44;
static float  Vis = VIS._41;
#endif

#if SHADER_TYPE == 5
float4x4 EyeJointController : CONTROLOBJECT <string name="(self)"; string item = EyeJoint; >;
#endif

  //=====================  Flags  =======================//
#define NORMAL Normal
#define SPECULAR SpecularMap
#define TRANSPARENCY Transparency
#define TRANSLUCENCY Translucency
#define ENV_MAP OverrideIBL || Environment
#define ALPHA_TEST_DEF Punch_through

#define SELF_SHADOW 1
#define LIGHT0 0
#define LIGHT1 0
#define U12 1
#define SHADOW 0
#define CHARA_COLOR 1
#define TONE_CURVE 1

#define TEXTURE_COUNT_1 1
#define TEXTURE_COUNT_2 1
#define WATER_REFLECT 1

#define FOG   0
#define FOG_1 0
#define FOG_2 0
#define FOG_HEIGHT_1 0
#define FOG_HEIGHT_2 0
#define FOG_HEIGHT_3 0
#define SPECULAR_IBL 1
#define SPECULAR_IBL_1 1
#define SPECULAR_IBL_2 0

#define ANISO 0
#if Aniso_Direction > 0
	#define ANISO 1
#endif

#define ANISO_1 0
#define ANISO_2 0
#define ANISO_3 0

#if Aniso_Direction == 1
	#define ANISO_1 1
#elif Aniso_Direction == 2
	#define ANISO_2 1
#elif Aniso_Direction == 3
	#define ANISO_3 1
#endif

#if Graphic_Style == 1
	#define NPR 1
    #define NPR_DEF 1
#endif

#define U18 0 //???

      #include "- Shaders/#Include/+ HgShadow.fxh"
  //=====================  Shaders  =====================//
#if SHADER_TYPE == 0
	#include "- Shaders/item_blinn.fxsub"
#elif SHADER_TYPE == 1
	#if NPR
		#include "- Shaders/skin_npr1.fxsub"
	#else
		#include "- Shaders/skin_default.fxsub"
	#endif
#elif SHADER_TYPE == 2
	#if NPR
		#include "- Shaders/cloth_npr1.fxsub"
	#elif ANISO == 1
		#include "- Shaders/cloth_aniso.fxsub"
	#else
		#include "- Shaders/cloth_default.fxsub"
	#endif
#elif SHADER_TYPE == 3
	#include "- Shaders/tights.fxsub"
#elif SHADER_TYPE == 4
	#if NPR
		#include "- Shaders/hair_npr1.fxsub"
	#else
		#include "- Shaders/hair_default.fxsub"
	#endif
#elif SHADER_TYPE == 5
	#include "- Shaders/glass_eye.fxsub"
#elif SHADER_TYPE == 6
	#include "- Shaders/sss_skin.fxsub"
#elif SHADER_TYPE == 10
	#include "- Shaders/item_blinn22.fxsub"
	
#elif SHADER_TYPE == 100
	#if Lambert_Shading == 0 && Phong_Shading == 0
		#include "- Shaders/constant.fxsub"
	#elif Phong_Shading == 0
		#include "- Shaders/lambert.fxsub"
	#else
		#if NORMAL
			#include "- Shaders/blinn_per_frag.fxsub"
		#else
			#include "- Shaders/blinn_per_vert.fxsub"
		#endif
	#endif
#elif SHADER_TYPE == 101
	#include "- Shaders/item_blinn.fxsub"
#elif SHADER_TYPE == 102
	#include "- Shaders/stage_blinn.fxsub"
	//103 FLOOR	
	//104 SKY
#endif